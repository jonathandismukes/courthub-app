name: Run Parks Backfill (Balanced one-time)

on:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

concurrency:
  group: backfill-balanced-run
  cancel-in-progress: false

jobs:
  run_balanced_once:
    name: Run Balanced Backfill (cap=40,000)
    runs-on: ubuntu-latest
    # Set your default Firebase project ID here or use GitHub Environments/Repository Variables
    env:
      TARGET_PROJECT: courthub-app
      REGION: us-central1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud (OIDC id_token for callable)
        id: auth
        uses: google-github-actions/auth@v2
        with:
          # Service Account JSON stored in repo secret FIREBASE_DEPLOY_KEY
          credentials_json: ${{ secrets.FIREBASE_DEPLOY_KEY }}
          # Request an ID token usable to call the HTTPS function URL
          token_format: id_token
          audience: https://${{ env.REGION }}-${{ env.TARGET_PROJECT }}.cloudfunctions.net/runParksBackfillOnce

      - name: Call runParksBackfillOnce (Balanced, cap=40,000)
        env:
          ID_TOKEN: ${{ steps.auth.outputs.id_token }}
        run: |
          set -euo pipefail
          URL="https://${REGION}-${TARGET_PROJECT}.cloudfunctions.net/runParksBackfillOnce"
          echo "POST ${URL}"
          BODY='{"data":{"mode":"balanced","capPerRun":40000,"clusterDecimals":3,"parseCityStateNoApi":true,"refineNamesCap":0,"pageSize":600}}'
          RESP=$(curl -sS -f -X POST \
            -H "Authorization: Bearer ${ID_TOKEN}" \
            -H "Content-Type: application/json" \
            --data "${BODY}" \
            "${URL}")
          echo "Response: ${RESP}"

      - name: Link to Firebase Console logs
        if: ${{ always() }}
        run: |
          echo "::notice::Open Functions logs: https://console.firebase.google.com/project/${{ env.TARGET_PROJECT }}/functions/list"

