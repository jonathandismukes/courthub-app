name: Run Parks Backfill (Balanced)

on:
  workflow_dispatch:

jobs:
  run-backfill-balanced:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud (service account)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_DEPLOY_KEY }}

      - name: Resolve BACKFILL_RUN_SECRET from Functions config
        env:
          TARGET_PROJECT: courthub-app
        run: |
          set -euo pipefail
          echo "Fetching Firebase Functions config from project: ${TARGET_PROJECT}"
          CFG=$(npx -y firebase-tools@13 functions:config:get --project "${TARGET_PROJECT}" || echo "{}")
          # Extract backfill.run_secret safely via Node
          RUN_SECRET=$(node -e 'try{const j=JSON.parse(process.argv[1]);const v=((j.backfill||{}).run_secret)||"";process.stdout.write(String(v));}catch(e){process.stdout.write("")}' "${CFG}")
          if [ -z "${RUN_SECRET}" ]; then
            echo "backfill.run_secret is not set in Firebase Functions config. Cannot invoke HTTP runner." >&2
            exit 1
          fi
          echo "::add-mask::${RUN_SECRET}"
          echo "BACKFILL_RUN_SECRET=${RUN_SECRET}" >> "$GITHUB_ENV"

      - name: Invoke HTTP backfill
        env:
          TARGET_PROJECT: courthub-app
          BACKFILL_RUN_SECRET: ${{ env.BACKFILL_RUN_SECRET }}
        run: |
          set -euo pipefail
          URL="https://us-central1-${TARGET_PROJECT}.cloudfunctions.net/runParksBackfillOnceHttp"
          echo "Calling $URL"
          curl -sS -X POST "$URL" \
            -H "X-Run-Secret: ${BACKFILL_RUN_SECRET}" \
            -H "Content-Type: application/json" \
            --data '{"mode":"balanced","capPerRun":40000}'
