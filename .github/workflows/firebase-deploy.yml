name: Deploy Firebase Functions

on:
  workflow_dispatch:
  push:
    paths:
      - 'functions/**'
      - 'firebase.json'
      - '.firebaserc'
      - 'functions/package.json'
      - 'functions/package-lock.json'
      - '.github/workflows/firebase-functions-deploy.yml'

permissions:
  contents: read
  id-token: write

concurrency:
  group: firebase-functions-deploy
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            functions/package-lock.json

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          # Service account JSON stored in GitHub Secrets
          credentials_json: ${{ secrets.FIREBASE_DEPLOY_KEY }}
          create_credentials_file: true
          export_environment_variables: true

      - name: Install Firebase CLI
        run: |
          npm --version
          npm install -g firebase-tools@13

      - name: Install Functions dependencies
        working-directory: ./functions
        run: |
          if [ -f package-lock.json ]; then
            echo "Lockfile found -> npm ci"
            npm ci
          else
            echo "No lockfile -> npm install"
            npm install
          fi

      - name: Diagnostics
        run: |
          echo "pwd: $(pwd)"
          ls -la
          if [ -f firebase.json ]; then
            echo "firebase.json found at repo root"
          else
            echo "firebase.json NOT found at repo root" && exit 1
          fi
          echo "functions directory listing:"
          ls -la functions || true

      - name: Set Functions config (Geo keys)
        env:
          GEOAPIFY_KEY: ${{ secrets.GEOAPIFY_KEY }}
        run: |
          if [ -z "$GEOAPIFY_KEY" ]; then
            echo "GEOAPIFY_KEY secret is missing. Add it in GitHub → Settings → Secrets and variables → Actions." && exit 1
          fi
          # Write the Geoapify key to functions runtime config
          firebase functions:config:set maps.geoapify_key="$GEOAPIFY_KEY" --force --config firebase.json
          # Optional: show the value exists (redacted by CLI)
          firebase functions:config:get | node -e "const fs=require('fs'); const data=JSON.parse(fs.readFileSync(0,'utf8')); console.log(!!(data.maps && data.maps.geoapify_key) ? 'Geoapify key set ✓' : 'Geoapify key missing ✗')"

      - name: Deploy Cloud Functions
        env:
          CI: true
        run: |
          # Deploy only Functions from repo root, explicitly using firebase.json
          firebase deploy --only functions --non-interactive --config firebase.json --force
